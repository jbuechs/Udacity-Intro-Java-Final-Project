#BlueJ class context
comment0.params=numCols\ numRows
comment0.target=Connect4Game(int,\ int)
comment0.text=\n\ Construct\ a\ new\ Connect\ 4\ game\ with\ the\ given\ size.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @param\ numCols\ The\ number\ of\ columns\ in\ the\ game\ board\n\ @param\ numRows\ The\ number\ of\ rows\ in\ the\ game\ board\n
comment1.params=game
comment1.target=Connect4Game(Connect4Game)
comment1.text=\n\ Copy\ an\ existing\ Connect\ 4\ game.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @param\ game\ The\ game\ to\ copy.\n
comment10.params=row\ column
comment10.target=void\ highlightSlot(int,\ int)
comment10.text=\n\ Highlight\ the\ winning\ moves\ in\ a\ game.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @param\ row\ the\ row\ of\ the\ token\ to\ highlight\n\ @param\ column\ the\ column\ of\ the\ token\ to\ highlight\n
comment11.params=
comment11.target=boolean\ getRedPlayedFirst()
comment11.text=\n\ Check\ whether\ red\ played\ first.\ This\ is\ used\ to\ confirm\ the\ players\ are\ alternating\ correctly.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @return\ true\ if\ red\ played\ first\ in\ this\ game,\ false\ otherwise.\n
comment12.params=redPlayedFirst
comment12.target=void\ setRedPlayedFirst(boolean)
comment12.text=\n\ Sets\ whether\ red\ played\ first.\ This\ is\ used\ to\ confirm\ the\ players\ are\ alternating\ correctly.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @param\ redPlayedFirst\ true\ if\ red\ played\ first\ in\ this\ game,\ false\ otherwise.\n
comment2.params=i
comment2.target=Connect4Column\ getColumn(int)
comment2.text=\n\ Retrieve\ a\ certain\ Connect4Column\ from\ the\ game\ board.\n\ \n\ Your\ agent\ WILL\ need\ to\ use\ this\ method.\n\ \n\ @param\ i\ The\ column\ to\ retrieve.\n\ @return\ the\ ith\ Connect4Column\ if\ it\ exists;\ null\ otherwise\n
comment3.params=
comment3.target=int\ getColumnCount()
comment3.text=\n\ Get\ the\ total\ number\ of\ columns\ in\ the\ game\ board.\n\ \n\ Your\ agent\ WILL\ need\ to\ use\ this\ method.\n\ \n\ @return\ the\ number\ of\ columns\ in\ the\ game\ board.\n
comment4.params=
comment4.target=int\ getRowCount()
comment4.text=\n\ Get\ the\ total\ number\ of\ rows\ in\ the\ game\ board.\n\ \n\ Your\ agent\ WILL\ need\ to\ use\ this\ method.\n\ \n\ @return\ the\ number\ of\ rows\ in\ the\ game\ board.\n
comment5.params=
comment5.target=void\ clearBoard()
comment5.text=\n\ Start\ a\ new\ game.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n
comment6.params=
comment6.target=char[][]\ getBoardMatrix()
comment6.text=\n\ Retrieve\ a\ matrix\ form\ of\ the\ board.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @return\ a\ character\ matrix\ of\ the\ game\ board.\n
comment7.params=
comment7.target=boolean\ boardFull()
comment7.text=\n\ Check\ if\ the\ board\ is\ full.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @return\ true\ if\ the\ board\ is\ full,\ false\ otherwise.\n
comment8.params=
comment8.target=char\ gameWon()
comment8.text=\n\ Check\ if\ the\ game\ has\ been\ won.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @return\ 'R'\ if\ red\ won,\ 'Y'\ if\ yellow\ won,\ 'N'\ if\ the\ game\ has\ not\ been\ won.\n
comment9.params=after
comment9.target=java.lang.String\ validate(Connect4Game)
comment9.text=\n\ Validate\ that\ the\ given\ board\ is\ a\ valid\ next\ state\ following\ this\ board.\n\ \n\ Your\ agent\ will\ not\ need\ to\ use\ this\ method.\n\ \n\ @param\ after\ the\ next\ board\ state.\n
numComments=13
